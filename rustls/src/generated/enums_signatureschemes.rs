
enum_builder! {
    /// The `SignatureScheme` TLS protocol enum.  Values in this enum are taken
    /// from the various RFCs covering TLS, and are listed by IANA.
    /// The `Unknown` item is used when processing unrecognised ordinals.
    @U16
    EnumName: SignatureScheme;
    EnumVal{
        RSA_PKCS1_SHA1 => 0x0201,
        ECDSA_SHA1_Legacy => 0x0203,
        RSA_PKCS1_SHA256 => 0x0401,
        ECDSA_NISTP256_SHA256 => 0x0403,
        RSA_PKCS1_SHA384 => 0x0501,
        ECDSA_NISTP384_SHA384 => 0x0503,
        RSA_PKCS1_SHA512 => 0x0601,
        ECDSA_NISTP521_SHA512 => 0x0603,
        RSA_PSS_SHA256 => 0x0804,
        RSA_PSS_SHA384 => 0x0805,
        RSA_PSS_SHA512 => 0x0806,
        ED25519 => 0x0807,
        ED448 => 0x0808,
        DILITHIUM2 => 0xfe00,
        DILITHIUM3 => 0xfe01,
        DILITHIUM5 => 0xfe02,
        FALCON512 => 0xfe03,
        FALCON1024 => 0xfe04,
        RAINBOWICLASSIC => 0xfe05,
        RAINBOWICIRCUMZENITHAL => 0xfe06,
        RAINBOWICOMPRESSED => 0xfe07,
        RAINBOWIIICLASSIC => 0xfe08,
        RAINBOWIIICIRCUMZENITHAL => 0xfe09,
        RAINBOWIIICOMPRESSED => 0xfe0a,
        RAINBOWVCLASSIC => 0xfe0b,
        RAINBOWVCIRCUMZENITHAL => 0xfe0c,
        RAINBOWVCOMPRESSED => 0xfe0d,
        SPHINCSHARAKA128FSIMPLE => 0xfe0e,
        SPHINCSHARAKA128FROBUST => 0xfe0f,
        SPHINCSHARAKA128SSIMPLE => 0xfe10,
        SPHINCSHARAKA128SROBUST => 0xfe11,
        SPHINCSHARAKA192FSIMPLE => 0xfe12,
        SPHINCSHARAKA192FROBUST => 0xfe13,
        SPHINCSHARAKA192SSIMPLE => 0xfe14,
        SPHINCSHARAKA192SROBUST => 0xfe15,
        SPHINCSHARAKA256FSIMPLE => 0xfe16,
        SPHINCSHARAKA256FROBUST => 0xfe17,
        SPHINCSHARAKA256SSIMPLE => 0xfe18,
        SPHINCSHARAKA256SROBUST => 0xfe19,
        SPHINCSSHA256128FSIMPLE => 0xfe1a,
        SPHINCSSHA256128FROBUST => 0xfe1b,
        SPHINCSSHA256128SSIMPLE => 0xfe1c,
        SPHINCSSHA256128SROBUST => 0xfe1d,
        SPHINCSSHA256192FSIMPLE => 0xfe1e,
        SPHINCSSHA256192FROBUST => 0xfe1f,
        SPHINCSSHA256192SSIMPLE => 0xfe20,
        SPHINCSSHA256192SROBUST => 0xfe21,
        SPHINCSSHA256256FSIMPLE => 0xfe22,
        SPHINCSSHA256256FROBUST => 0xfe23,
        SPHINCSSHA256256SSIMPLE => 0xfe24,
        SPHINCSSHA256256SROBUST => 0xfe25,
        SPHINCSSHAKE256128FSIMPLE => 0xfe26,
        SPHINCSSHAKE256128FROBUST => 0xfe27,
        SPHINCSSHAKE256128SSIMPLE => 0xfe28,
        SPHINCSSHAKE256128SROBUST => 0xfe29,
        SPHINCSSHAKE256192FSIMPLE => 0xfe2a,
        SPHINCSSHAKE256192FROBUST => 0xfe2b,
        SPHINCSSHAKE256192SSIMPLE => 0xfe2c,
        SPHINCSSHAKE256192SROBUST => 0xfe2d,
        SPHINCSSHAKE256256FSIMPLE => 0xfe2e,
        SPHINCSSHAKE256256FROBUST => 0xfe2f,
        SPHINCSSHAKE256256SSIMPLE => 0xfe30,
        SPHINCSSHAKE256256SROBUST => 0xfe31,
        KEMTLS_KYBER512 => 0xfe32,
        KEMTLS_KYBER768 => 0xfe33,
        KEMTLS_KYBER1024 => 0xfe34,
        KEMTLS_MCELIECE348864 => 0xfe35,
        KEMTLS_MCELIECE348864F => 0xfe36,
        KEMTLS_MCELIECE460896 => 0xfe37,
        KEMTLS_MCELIECE460896F => 0xfe38,
        KEMTLS_MCELIECE6688128 => 0xfe39,
        KEMTLS_MCELIECE6688128F => 0xfe3a,
        KEMTLS_MCELIECE6960119 => 0xfe3b,
        KEMTLS_MCELIECE6960119F => 0xfe3c,
        KEMTLS_MCELIECE8192128 => 0xfe3d,
        KEMTLS_MCELIECE8192128F => 0xfe3e,
        KEMTLS_LIGHTSABER => 0xfe3f,
        KEMTLS_SABER => 0xfe40,
        KEMTLS_FIRESABER => 0xfe41,
        KEMTLS_NTRUHPS2048509 => 0xfe42,
        KEMTLS_SIDHP434 => 0xfe43,

    }
}